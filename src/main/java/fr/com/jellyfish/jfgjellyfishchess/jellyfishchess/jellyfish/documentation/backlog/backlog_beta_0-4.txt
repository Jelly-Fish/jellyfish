/*******************************************************************************
 * Copyright (c) 2014, Thomas.H Warner.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, 
 * are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this 
 * list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice, 
 * this list of conditions and the following disclaimer in the documentation and/or 
 * other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors 
 * may be used to endorse or promote products derived from this software without 
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY 
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON 
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 *******************************************************************************/

*************************************************
JeLLyfish lib & UI developement doc and backlog *
*************************************************

Beta V0.4
________________________________________________________________________________
////////////////////////////////////////////////////////////////////////////////
BUGZ - TODO's :

- Enable/disable game snapshot saving. Save snapshots to date-time stamp dir in
snapshots/games/newDirName/ : copy .snapshot files from snapshots/temp/

- checkmate evalution needs complete re-thinking... FIX.

- PGN notation.

- Test serialization of the hole programme (basicly... that's it). Cover all 
functional possibilities. 

- check/use with open critter engine.
________________________________________________________________________________
////////////////////////////////////////////////////////////////////////////////
ENGINE BUGZ :

________________________________________________________________________________
////////////////////////////////////////////////////////////////////////////////
DEVELOPEMENT STATUS LOGS :

________________________________________________________________________________
////////////////////////////////////////////////////////////////////////////////
SOLVED OR DEAD-END BUGS :

- Check situation activates red border on King's Position ChessSquare. It sometimes
stays to red even when king has moved out of situation or check situation has been
blocked or 'destroyed' by another ChessMan subclass. 
SOLUTION : see CheckObserver interface param 2 & 3 : boolean inCheck & boolean 
isKingMove. CheckObserver interface deals with check & non check situations :
is inCheck = false King is out of check and if isKingMove = true apply specific 
UI actions to event...

- move back feature : thers a gap in file numbers : 12, 13, 14.snapshot then 
15.snapshot. SOLUTION : BoardSnapshot deleteSnapshots(final int index) was deleting
one file to many...

FIXME : bellow, all goes fine, when taking another move GUIDriver fires a null
pointer exception. Seems that Board class coordinates hashmap <String, Position>
.get(...) has no ref.
SOLUTION : see solution explained bellow :

- 'take move back' feature : rebuild gui board display with fenMoves TreeMap
ChessGame property. Remove necessary indexes from fenMoves and gameMoves Treemaps
in chess game : once done GUI can choose another move. Game just starts again at 
desired index.
SOLUTION : use serialization to data/snapshots/1.snapshot for exmaple will be the first
move snapshot of board.
- move forward in game history (after move backs).
SOLUTION :
See BoardSnapshot class in jellyfish.game package.
Serialization has been used to take snapshots of the board on each move including
move nÂ°0. Movingback move consists in deserializing .snapshot files in data/snapshots/
directory. If GUI/User decides hehas moved bck enough and takes a new move (a 
different one or not) all > snapshots in game history (deffined by ChessGame.moveIndex).
See all classes injellyfish.game package + CommonUtils for retreiving .snapshot file 
names without extention. These files are simply named with ChessGame.moveIndex 
property : 0.snapshot, 1.snapshot for the first two moves ect.