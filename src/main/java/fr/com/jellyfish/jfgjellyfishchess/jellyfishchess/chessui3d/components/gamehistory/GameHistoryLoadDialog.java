/**
 * *****************************************************************************
 * Copyright (c) 2015, Thomas.H Warner. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE. 
 ******************************************************************************
 */
package fr.com.jellyfish.jfgjellyfishchess.jellyfishchess.chessui3d.components.gamehistory;

import fr.com.jellyfish.jfgjellyfishchess.jellyfishchess.chessui3d.components.Console3D;
import fr.com.jellyfish.jfgjellyfishchess.jellyfishchess.chessui3d.dto.MoveQueueDTO;
import fr.com.jellyfish.jfgjellyfishchess.jellyfishchess.chessui3d.opengl.constants.UI3DConst;
import fr.com.jellyfish.jfgjellyfishchess.jellyfishchess.chessui3d.opengl.utils.TimeUtils;

/**
 *
 * @author thw
 */
public class GameHistoryLoadDialog extends javax.swing.JDialog {

    /**
     * Title.
     */
    private static final String title = "Reload game from games history";
    
    /**
     * Console instance reference.
     */
    private Console3D console;
    
    /**
     * MoveQueueDTO instance reference.
     */
    private MoveQueueDTO queueDto;
    
    /**
     * Creates new form GameHistoryLoadDialog
     * @param parent
     * @param queueDto
     * @param console
     */
    public GameHistoryLoadDialog(java.awt.Frame parent, final MoveQueueDTO queueDto,
            final Console3D console) {
        super(parent, true);
        initComponents();
        this.console = console;
        this.queueDto = queueDto;
        this.setTitle(GameHistoryLoadDialog.title);
        
        this.gameLoaderTextArea.append("Fen value: " + queueDto.getQueue().getFen() + "\n");
        this.gameLoaderTextArea.append("Desc: " + queueDto.getQueue().getDescription() + "\n");
        this.gameLoaderTextArea.append("Color played: " + queueDto.getQueue().getUiColor()+ "\n");
        this.gameLoaderTextArea.append("Move count: " + queueDto.getQueue().getMoves().size() + "\n");
        this.gameLoaderTextArea.append("Elapsed game time: " + TimeUtils.convertTicksHhMmSs(queueDto.getQueue().getTicks()) + "\n");
        
        java.net.URL imgURL = getClass().getResource(UI3DConst.JELLYFISH_FRAME_ICON);
        javax.swing.ImageIcon img = new javax.swing.ImageIcon(imgURL);
        this.setIconImage(img.getImage());
        
        this.setLocationRelativeTo(null);
        this.gameLoaderLoadButton.setSelected(true);
        this.getRootPane().setDefaultButton(this.gameLoaderLoadButton);
        this.setVisible(true);
        this.requestFocus();
        this.gameLoaderLoadButton.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameLoaderConainer = new javax.swing.JPanel();
        gameLoadDialogLabel1 = new javax.swing.JLabel();
        textAreaScrollPane = new javax.swing.JScrollPane();
        gameLoaderTextArea = new javax.swing.JTextArea();
        gameLoaderCancelButton = new javax.swing.JButton();
        gameLoaderLoadButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
        setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);

        gameLoadDialogLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gameLoadDialogLabel1.setText("Are you sur you want to reload the selected game ?");

        gameLoaderTextArea.setEditable(false);
        gameLoaderTextArea.setColumns(20);
        gameLoaderTextArea.setRows(5);
        gameLoaderTextArea.setBorder(null);
        gameLoaderTextArea.setDoubleBuffered(true);
        gameLoaderTextArea.setOpaque(false);
        textAreaScrollPane.setViewportView(gameLoaderTextArea);

        gameLoaderCancelButton.setText(" Cancel ");
        gameLoaderCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameLoaderCancelButtonActionPerformed(evt);
            }
        });

        gameLoaderLoadButton.setText("Load game now !");
        gameLoaderLoadButton.setSelected(true);
        gameLoaderLoadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameLoaderLoadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gameLoaderConainerLayout = new javax.swing.GroupLayout(gameLoaderConainer);
        gameLoaderConainer.setLayout(gameLoaderConainerLayout);
        gameLoaderConainerLayout.setHorizontalGroup(
            gameLoaderConainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameLoaderConainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gameLoaderConainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textAreaScrollPane)
                    .addGroup(gameLoaderConainerLayout.createSequentialGroup()
                        .addComponent(gameLoadDialogLabel1)
                        .addGap(0, 204, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameLoaderConainerLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(gameLoaderLoadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gameLoaderCancelButton)))
                .addContainerGap())
        );
        gameLoaderConainerLayout.setVerticalGroup(
            gameLoaderConainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameLoaderConainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gameLoadDialogLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textAreaScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(gameLoaderConainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gameLoaderCancelButton)
                    .addComponent(gameLoaderLoadButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gameLoaderConainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gameLoaderConainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gameLoaderLoadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameLoaderLoadButtonActionPerformed
        this.setVisible(false);
        console.reloadSavedGame(this.queueDto);
        this.exit();
    }//GEN-LAST:event_gameLoaderLoadButtonActionPerformed

    private void gameLoaderCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameLoaderCancelButtonActionPerformed
        this.exit();
    }//GEN-LAST:event_gameLoaderCancelButtonActionPerformed

    /**
     * 
     */
    private void exit() {
        this.setVisible(false);
        this.queueDto = null;
        this.console = null;
        this.dispose();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel gameLoadDialogLabel1;
    private javax.swing.JButton gameLoaderCancelButton;
    private javax.swing.JPanel gameLoaderConainer;
    private javax.swing.JButton gameLoaderLoadButton;
    private javax.swing.JTextArea gameLoaderTextArea;
    private javax.swing.JScrollPane textAreaScrollPane;
    // End of variables declaration//GEN-END:variables
}
